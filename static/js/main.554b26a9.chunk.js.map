{"version":3,"sources":["functions/FlattenSearchOptions.ts","functions/CreateAccordionsRecursive.tsx","theme/MUIColours.ts","Theme.ts","components/TopBar.tsx","App.tsx","index.tsx"],"names":["flatten","json","flatArray","notes","group","code","slice","filter","item","id","length","push","label","title","disabled","enabled","children","forEach","child","createAccordion","expanded","setExpanded","matchDepth","theme","match","expand","color","palette","primary","main","text","Accordion","elevation","onChange","levelUp","replace","sx","bgcolor","AccordionSummary","expandIcon","ExpandMore","display","ml","Typography","flex","pr","fontWeight","style","variant","AccordionDetails","map","nestedCode","paddingRight","blue","blueDark","grey","ColorModeContext","React","createContext","toggleColorMode","TopBar","height","colorMode","useContext","useTheme","AppBar","position","justifyContent","Toolbar","width","textAlign","IconButton","marginLeft","onClick","mode","Brightness7","Brightness4","App","useState","setMode","useMemo","prevMode","createTheme","divider","primaryDark","background","default","paper","secondary","shape","borderRadius","spacing","getDesignTokens","ddc","setDDC","searchOptions","setSearchOptions","useEffect","ddcJson","flatJson","Provider","value","ThemeProvider","Box","mt","alignItems","flexDirection","Helmet","CssBaseline","paddingLeft","paddingTop","maxWidth","Paper","marginBottom","padding","Autocomplete","options","getOptionDisabled","option","groupBy","event","newValue","renderInput","params","TextField","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAEO,SAASA,EAAQC,EAAeC,GACnC,IAAIC,EAAQ,GACRF,EAAKE,QACLA,EAAK,YAAQF,EAAKE,MAAb,MAET,IAAMC,EAAQH,EAAKI,KAAKC,MAAM,EAAG,GAAK,IAQtC,OAP6D,IAA1DJ,EAAUK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,IAAMR,EAAKI,QAAMK,QAC9CR,EAAUS,KAAK,CAACF,GAAIR,EAAKI,KAAMO,MAAO,UAAGX,EAAKI,KAAR,aAAiBJ,EAAKY,OAAUV,EAAOC,MAAOA,EAAOU,UAAWb,EAAKc,UAG3Gd,EAAKe,UACLf,EAAKe,SAASC,SAAQ,SAAAC,GAAK,OAAIlB,EAAQkB,EAAOhB,MAE3CA,E,wDCVJ,SAASiB,EAAgBd,EAAee,EAAyBC,EAAkBC,EAAoBC,GAEzD,MAA7ClB,EAAKA,KAAKC,MAAM,EAAGgB,GAAYhB,OAAO,KACtCgB,GAA0B,GAE9B,IAAME,EAAQnB,EAAKA,KAAKC,MAAM,EAAGgB,GAC7BG,GAAS,EACTL,IACAK,EAASL,EAASd,MAAM,EAAGgB,KAAgBE,GAE/C,IAAME,EAAQD,EAASF,EAAMI,QAAQC,QAAQC,KAAON,EAAMI,QAAQG,KAAKF,QAEvE,OAAIvB,EAAKW,SACE,eAACe,EAAA,EAAD,CACHC,UAAW3B,EAAKU,QAAU,EAAI,EAC9BD,UAAWT,EAAKU,QAChBK,SAAUK,EACVQ,SAAU,WACN,GAAIb,IAAaf,EAAKA,KAClB,GAAIA,EAAKA,KAAKK,OAAS,EACnBW,EAAYhB,EAAKA,KAAKC,MAAM,GAAI,QAC7B,CAGH,IAFA,IACI4B,EADU7B,EAAKA,KAAK8B,QAAQ,QAAS,IACnB7B,MAAM,GAAI,GACzB4B,EAAQxB,OAAS,GACpBwB,GAAoB,IAGpBb,EADW,QAAZa,EACa,MAEAA,QAKpBb,EAAYhB,EAAKA,OAGzB+B,GAAI,CAACC,QAAS,sBAzBX,UA2BH,eAACC,EAAA,EAAD,CAAkBC,WAAY,cAACC,EAAA,EAAD,IAAeJ,GAAI,CAACK,QAAS,OAAQC,GAAI,GAAvE,UACI,cAACC,EAAA,EAAD,CAAYP,GAAI,CAACV,MAAOA,EAAOkB,KAAM,EAAGC,GAAI,KAAMC,WAAY,QAA9D,SAAwEzC,EAAKA,OAC7E,sBAAK0C,MAAO,CAACH,KAAM,IAAnB,UACI,cAACD,EAAA,EAAD,CAAYP,GAAI,CAACV,MAAOA,EAAOoB,WAAY,QAA3C,SAAqDzC,EAAKQ,QAC1D,cAAC8B,EAAA,EAAD,CAAYK,QAAQ,UAAUZ,GAAI,CAACV,MAAO,kBAA1C,SAA8DrB,EAAKF,cAG3E,cAAC8C,EAAA,EAAD,UACK5C,EAAKW,SAASkC,KAAI,SAAAC,GAAU,OAAIhC,EAAgBgC,EAAY/B,EAAUC,EAAaC,EAAa,EAAGC,WAIrG,cAACQ,EAAA,EAAD,CACHC,UAAW3B,EAAKU,QAAU,EAAI,EAC9BD,UAAWT,EAAKU,QAChBK,SAAUA,IAAaf,EAAKA,KAC5B+B,GAAI,CAACC,QAAS,sBAJX,SAMH,eAACC,EAAA,EAAD,CAAkBF,GAAI,CAACK,QAAS,OAAQC,GAAI,GAA5C,UACI,cAACC,EAAA,EAAD,CAAYI,MAAO,CAACH,KAAM,EAAGQ,aAAc,KAAMN,WAAY,QAA7D,SAAuEzC,EAAKA,OAC5E,sBAAK0C,MAAO,CAACH,KAAM,IAAnB,UACI,cAACD,EAAA,EAAD,CAAYI,MAAO,CAACrB,MAAOA,EAAOoB,WAAY,QAA9C,SAAwDzC,EAAKQ,QAC7D,cAAC8B,EAAA,EAAD,CAAYK,QAAQ,UAAUZ,GAAI,CAACV,MAAO,kBAA1C,SAA8DrB,EAAKF,gB,yDCnE1EkD,EAAO,CAChB,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACLxB,KAAM,UACN,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAEIyB,EAAW,CACpB,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACLzB,KAAM,UACN,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAGI0B,EAAO,CAChB,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WC9BIC,EAAmBC,IAAMC,cAAc,CAChDC,gBAAiB,eCgBNC,MApBf,YAA6C,IAA5BC,EAA2B,EAA3BA,OACPC,EDM+BC,qBAAWP,GCL1CjC,EAAQyC,cACd,OACI,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQlC,UAAW,EAAGI,GAAI,CAACyB,OAAQA,EAAQM,eAAgB,UAA5E,SACI,eAACC,EAAA,EAAD,CAAShC,GAAI,CAACiC,MAAO,QAArB,UACI,qBAAKtB,MAAO,CAACH,KAAM,KACnB,cAACD,EAAA,EAAD,CAAYK,QAAQ,KAAKZ,GAAI,CAACQ,KAAM,EAAG0B,UAAW,UAAlD,0CAGA,qBAAKvB,MAAO,CAACH,KAAM,EAAGH,QAAS,QAA/B,SACI,cAAC8B,EAAA,EAAD,CAAYxB,MAAO,CAACyB,WAAY,QAASC,QAASX,EAAUH,gBAAiBjC,MAAM,UAAnF,SAC4B,SAAvBH,EAAMI,QAAQ+C,KAAkB,cAACC,EAAA,EAAD,IAAiB,cAACC,EAAA,EAAD,cC2E3DC,MA9Ef,WACI,MAAwBC,mBAAsB,SAA9C,mBAAOJ,EAAP,KAAaK,EAAb,KAGMjB,EAAYkB,mBACd,iBAAO,CAEHrB,gBAAiB,WACboB,GAAQ,SAACE,GAAD,MACS,UAAbA,EAAuB,OAAS,eAI5C,IAIE1D,EAAQyD,mBAAQ,kBAAME,YFjBD,SAACR,GAAD,MAAwB,CACnD/C,QAAQ,iDACJC,QAAQ,2BACDyB,GACU,SAATqB,GAAmB,CACnB7C,KAAMwB,EAAK,OAGnB8B,QAAkB,SAATT,EAAkBpB,EAAS,KAAOC,EAAK,KAChD6B,YAAa9B,EACboB,QACa,SAATA,GAAmB,CACnBW,WAAY,CACRC,QAAShC,EAAS,KAClBiC,MAAOjC,EAAS,QAGX,UAAToB,GAAoB,CACpB5C,KAAM,CACFF,QAAS2B,EAAK,KACdiC,UAAWjC,EAAK,QAGX,SAATmB,GAAmB,CACnB5C,KAAM,CACFF,QAAS,OACT4D,UAAWjC,EAAK,QAzBrB,IA4BHA,SAEJkC,MAAO,CACHC,aAAc,IAElBC,QAAS,IEjB+BC,CAAgBlB,MAAQ,CAACA,IAEjE,EAAgCI,mBAAwB,OAAxD,mBAAO1D,EAAP,KAAiBC,EAAjB,KACA,EAAsByD,mBAAoB,IAA1C,mBAAOe,EAAP,KAAYC,EAAZ,KACA,EAA0ChB,mBAAyB,IAAnE,mBAAOiB,EAAP,KAAsBC,EAAtB,KAQA,OANAC,qBAAU,WACNH,EAAOI,GACP,IAAMC,EAAWD,EAAQhD,KAAI,SAAA2C,GAAG,OAAI7F,EAAQ6F,EAAK,OAAK,GACtDG,EAAiBG,KAClB,IAGC,cAAC3C,EAAiB4C,SAAlB,CAA2BC,MAAOvC,EAAlC,SACI,eAACwC,EAAA,EAAD,CAAe/E,MAAOA,EAAtB,UACI,cAAC,EAAD,CAAQsC,OAAQ,KAChB,eAAC0C,EAAA,EAAD,CAAKnE,GAAI,CACLoE,GAAI,EACJ/D,QAAS,OACTgE,WAAY,SACZC,cAAe,SACfrE,QAAS,oBALb,UAOI,cAACsE,EAAA,EAAD,UACI,gCAAQ,gBAEZ,cAACC,EAAA,EAAD,IAEA,cAACL,EAAA,EAAD,CAAKnE,GAAI,CACLkC,UAAW,SACXuC,YAAa,EACbC,WAAY,EACZ1D,aAAc,EACdiB,MAAO,OACP0C,SAAU,KANd,SAQI,cAACC,EAAA,EAAD,CAAOjE,MAAO,CAACuB,UAAW,OAAQ2C,aAAc,GAAI5C,MAAO,OAAQ6C,QAAS,IAA5E,SACI,cAACC,EAAA,EAAD,CACIC,QAASrB,EACTsB,kBAAmB,SAACC,GAAD,OAAYA,EAAOxG,UACtCyG,QAAS,SAACD,GAAD,OAAYA,EAAOlH,OAC5B6B,SAAU,SAACuF,EAAOC,GAEVpG,EADAoG,EACYA,EAAShH,GAETgH,IAGpBC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuB3E,QAAQ,WAAWpC,MAAM,sBAIrF,qBAAKmC,MAAO,CAACgE,SAAU,IAAKG,QAAS,GAAI7C,MAAO,QAAhD,gBACKwB,QADL,IACKA,OADL,EACKA,EAAK3C,KAAI,SAAA7C,GAAI,OAAIc,EAAgBd,EAAMe,EAAUC,EAAa,EAAGE,iBC9E1FsG,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.554b26a9.chunk.js","sourcesContent":["import {ddcCode, searchOption} from \"../types/types\";\n\nexport function flatten(json: ddcCode, flatArray: searchOption[]): searchOption[] {\n    let notes = ''\n    if (json.notes) {\n        notes = ` (${json.notes})`\n    }\n    const group = json.code.slice(0, 2) + '0'\n    if(flatArray.filter(item => item.id == json.code).length === 0){\n        flatArray.push({id: json.code, label: `${json.code}: ${json.title}` + notes, group: group, disabled: !json.enabled})\n\n    }\n    if (json.children) {\n        json.children.forEach(child => flatten(child, flatArray))\n    }\n    return flatArray\n}","import {ddcCode} from \"../types/types\";\nimport {Accordion, AccordionDetails, AccordionSummary, alpha, Typography} from \"@mui/material\";\nimport {ExpandMore} from \"@mui/icons-material\";\nimport React from \"react\";\n\nexport function createAccordion(code: ddcCode, expanded: string | null, setExpanded: any, matchDepth: number, theme: any) {\n\n    if (code.code.slice(0, matchDepth).slice(-1) === '.') {\n        matchDepth = matchDepth + 1\n    }\n    const match = code.code.slice(0, matchDepth)\n    let expand = false\n    if (expanded) {\n        expand = expanded.slice(0, matchDepth) === match\n    }\n    const color = expand ? theme.palette.primary.main : theme.palette.text.primary\n\n    if (code.children) {\n        return <Accordion\n            elevation={code.enabled ? 4 : 0}\n            disabled={!code.enabled}\n            expanded={expand}\n            onChange={() => {\n                if (expanded === code.code) {\n                    if (code.code.length > 4) {\n                        setExpanded(code.code.slice(0, -1))\n                    } else {\n                        let trimmed = code.code.replace(/[.0]/g, '')\n                        let levelUp = trimmed.slice(0, -1)\n                        while (levelUp.length < 3) {\n                            levelUp = levelUp + '0'\n                        }\n                        if(levelUp === '000'){\n                            setExpanded('200')\n                        } else {\n                            setExpanded(levelUp)\n                        }\n\n                    }\n                } else {\n                    setExpanded(code.code)\n                }\n            }}\n            sx={{bgcolor: 'background.default'}}\n        >\n            <AccordionSummary expandIcon={<ExpandMore/>} sx={{display: 'flex', ml: 4}}>\n                <Typography sx={{color: color, flex: 1, pr: '5%', fontWeight: 'bold'}}>{code.code}</Typography>\n                <div style={{flex: 10}}>\n                    <Typography sx={{color: color, fontWeight: 'bold'}}>{code.title}</Typography>\n                    <Typography variant='caption' sx={{color: 'text.secondary'}}>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                {code.children.map(nestedCode => createAccordion(nestedCode, expanded, setExpanded, matchDepth + 1, theme))}\n            </AccordionDetails>\n        </Accordion>\n    } else {\n        return <Accordion\n            elevation={code.enabled ? 4 : 0}\n            disabled={!code.enabled}\n            expanded={expanded === code.code}\n            sx={{bgcolor: 'background.default'}}\n        >\n            <AccordionSummary sx={{display: 'flex', ml: 4}}>\n                <Typography style={{flex: 1, paddingRight: '5%', fontWeight: 'bold'}}>{code.code}</Typography>\n                <div style={{flex: 10}}>\n                    <Typography style={{color: color, fontWeight: 'bold'}}>{code.title}</Typography>\n                    <Typography variant='caption' sx={{color: 'text.secondary'}}>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n        </Accordion>\n    }\n}\n","export const blue = {\n    50: '#F0F7FF',\n    100: '#C2E0FF',\n    200: '#A5D8FF',\n    300: '#66B2FF',\n    400: '#3399FF',\n    main: '#007FFF', // contrast 3.83:1\n    500: '#007FFF',\n    600: '#0072E5',\n    700: '#0059B2',\n    800: '#004C99',\n    900: '#003A75',\n};\nexport const blueDark = {\n    50: '#E2EDF8',\n    100: '#CEE0F3',\n    200: '#91B9E3',\n    300: '#5090D3',\n    main: '#5090D3',\n    400: '#265D97',\n    500: '#1E4976',\n    600: '#173A5E',\n    700: '#132F4C', // contrast 13.64:1\n    800: '#001E3C',\n    900: '#0A1929',\n};\n\nexport const grey = {\n    50: '#F3F6F9',\n    100: '#EAEEF3',\n    200: '#E5E8EC',\n    300: '#D7DCE1',\n    400: '#BFC7CF',\n    500: '#AAB4BE',\n    600: '#7F8E9D',\n    700: '#46505A', // contrast 8.21:1\n    800: '#2F3A45', // contrast 11.58:1\n    900: '#20262D',\n};","import React, {useContext} from \"react\";\n\nimport {\n    PaletteMode, ThemeOptions\n} from '@mui/material';\nimport {blue, blueDark, grey} from \"./theme/MUIColours\";\n\nexport const ColorModeContext = React.createContext({\n    toggleColorMode: () => {\n    }\n})\nexport const useColorModeContext = () => useContext(ColorModeContext);\n\nexport const getDesignTokens = (mode: PaletteMode) => ({\n    palette: {\n        primary: {\n            ...blue,\n            ...(mode === 'dark' && {\n                main: blue[400],\n            }),\n        },\n        divider: mode === 'dark' ? blueDark[700] : grey[200],\n        primaryDark: blueDark,\n        mode,\n        ...(mode === 'dark' && {\n            background: {\n                default: blueDark[800],\n                paper: blueDark[900],\n            },\n        }),\n        ...(mode === 'light' && {\n            text: {\n                primary: grey[900],\n                secondary: grey[700],\n            },\n        }),\n        ...(mode === 'dark' && {\n            text: {\n                primary: '#fff',\n                secondary: grey[500],\n            },\n        }),\n        grey,\n    },\n    shape: {\n        borderRadius: 10,\n    },\n    spacing: 10,\n} as ThemeOptions);","import {AppBar, IconButton, Toolbar, Typography, useTheme} from \"@mui/material\";\nimport {Brightness4, Brightness7, More, Search} from \"@mui/icons-material\";\nimport {useColorModeContext} from \"../Theme\";\n\nfunction TopBar({height}: {height: number}) {\n    const colorMode = useColorModeContext()\n    const theme = useTheme()\n    return (\n        <AppBar position=\"fixed\" elevation={5} sx={{height: height, justifyContent: 'center'}}>\n            <Toolbar sx={{width: '100%'}}>\n                <div style={{flex: 1}}/>\n                <Typography variant=\"h5\" sx={{flex: 1, textAlign: 'center'}}>\n                    Dewey Decimal Classification\n                </Typography>\n                <div style={{flex: 1, display: 'flex'}}>\n                    <IconButton style={{marginLeft: 'auto'}} onClick={colorMode.toggleColorMode} color=\"inherit\">\n                        {theme.palette.mode === 'dark' ? <Brightness7/> : <Brightness4/>}\n                    </IconButton>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default TopBar","import React, {useEffect, useMemo, useState} from 'react';\nimport {\n    CssBaseline,\n    TextField, Autocomplete, Paper, PaletteMode, createTheme, ThemeProvider, Box\n} from '@mui/material';\nimport ddcJson from './ddc.json'\nimport {Helmet} from 'react-helmet'\nimport {ddcCode, searchOption} from \"./types/types\";\nimport {flatten} from \"./functions/FlattenSearchOptions\";\nimport {createAccordion} from \"./functions/CreateAccordionsRecursive\";\nimport TopBar from \"./components/TopBar\";\nimport {ColorModeContext, getDesignTokens} from \"./Theme\";\n\nfunction App() {\n    const [mode, setMode] = useState<PaletteMode>('light');\n    // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    const colorMode = useMemo(\n        () => ({\n            // The dark mode switch would invoke this method\n            toggleColorMode: () => {\n                setMode((prevMode: PaletteMode) =>\n                    prevMode === 'light' ? 'dark' : 'light',\n                );\n            },\n        }),\n        [],\n    );\n\n    // Update the theme only if the mode changes\n    const theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n\n    const [expanded, setExpanded] = useState<string | null>('200');\n    const [ddc, setDDC] = useState<ddcCode[]>([]);\n    const [searchOptions, setSearchOptions] = useState<searchOption[]>([]);\n\n    useEffect(() => {\n        setDDC(ddcJson)\n        const flatJson = ddcJson.map(ddc => flatten(ddc, []))[2] //2 for Religion 200\n        setSearchOptions(flatJson)\n    }, []);\n\n    return (\n        <ColorModeContext.Provider value={colorMode}>\n            <ThemeProvider theme={theme}>\n                <TopBar height={70}/>\n                <Box sx={{\n                    mt: 7,\n                    display: 'flex',\n                    alignItems: \"center\",\n                    flexDirection: \"column\",\n                    bgcolor: 'background.paper'\n                }}>\n                    <Helmet>\n                        <title>{\"DDC Index\"}</title>\n                    </Helmet>\n                    <CssBaseline/>\n\n                    <Box sx={{\n                        textAlign: 'center',\n                        paddingLeft: 2,\n                        paddingTop: 2,\n                        paddingRight: 2,\n                        width: '100%',\n                        maxWidth: 900\n                    }}>\n                        <Paper style={{textAlign: 'left', marginBottom: 10, width: '100%', padding: 15}}>\n                            <Autocomplete\n                                options={searchOptions}\n                                getOptionDisabled={(option) => option.disabled}\n                                groupBy={(option) => option.group}\n                                onChange={(event, newValue) => {\n                                    if (newValue) {\n                                        setExpanded(newValue.id)\n                                    } else {\n                                        setExpanded(newValue)\n                                    }\n                                }}\n                                renderInput={(params) => <TextField {...params} variant='outlined' label=\"Search...\"/>}\n                            />\n                        </Paper>\n                    </Box>\n                    <div style={{maxWidth: 900, padding: 20, width: '100%'}}>\n                        {ddc?.map(code => createAccordion(code, expanded, setExpanded, 1, theme))}\n                    </div>\n                </Box>\n            </ThemeProvider>\n        </ColorModeContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["App.tsx","Theme.js","index.tsx"],"names":["colors","depth","color","grey","createAccordion","code","expanded","setExpanded","matchDepth","theme","slice","match","expand","palette","error","main","text","children","Accordion","elevation","disabled","enabled","onChange","length","levelUp","replace","style","background","AccordionSummary","expandIcon","ExpandMore","display","Typography","flex","paddingRight","fontWeight","title","variant","notes","AccordionDetails","map","nestedCode","flatten","json","flatArray","push","value","label","forEach","child","App","useTheme","useState","ddc","setDDC","searchOptions","setSearchOptions","useEffect","ddcJson","flatJson","default","height","alignItems","flexDirection","CssBaseline","textAlign","paddingLeft","paddingTop","width","maxWidth","marginBottom","isClearable","options","e","placeholder","padding","defaultTheme","createTheme","blueGrey","typography","body1","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.792afe4e.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {AccordionDetails, AccordionSummary, Typography, CssBaseline, useTheme, Accordion} from '@mui/material';\nimport {ExpandMore} from '@mui/icons-material';\nimport ddcJson from './ddc.json'\nimport Select from 'react-select'\nimport {grey} from \"@mui/material/colors\";\n\ninterface ddcCode {\n    code: string\n    title: string\n    notes?: string\n    children?: ddcCode[]\n    enabled: boolean\n}\n\nconst colors = (depth: number) => {\n    const color = grey\n    switch (depth) {\n        case 1:\n            return color[50]\n        case 2:\n            return color[100]\n        case 3:\n            return color[300]\n        case 4:\n            return color[400]\n        case 5:\n            return color[500]\n        case 6:\n            return color[600]\n    }\n}\n\nfunction createAccordion(code: ddcCode, expanded: string | null, setExpanded: any, matchDepth: number, theme: any) {\n\n    if (code.code.slice(0, matchDepth).slice(-1) === '.') {\n        matchDepth = matchDepth + 1\n    }\n    const match = code.code.slice(0, matchDepth)\n    let expand = false\n    if (expanded) {\n        expand = expanded.slice(0, matchDepth) === match\n    }\n    const color = expand ? theme.palette.error.main : theme.palette.text.main\n\n\n    if (code.children) {\n        return <Accordion\n            elevation={2}\n            disabled={!code.enabled}\n            expanded={expand}\n            onChange={() => {\n                if(expanded === code.code) {\n                    if(code.code.length > 4){\n                        setExpanded(code.code.slice(0, -1))\n                    } else {\n                        let trimmed = code.code.replace(/[.0]/g, '')\n                        let levelUp = trimmed.slice(0, -1)\n                        while(levelUp.length < 3){\n                            levelUp = levelUp + '0'\n                        }\n                        setExpanded(levelUp)\n                    }\n                } else {\n                    setExpanded(code.code)\n                }\n            }}\n            style={{background: colors(matchDepth)}}>\n            <AccordionSummary expandIcon={<ExpandMore/>} style={{display: 'flex'}}>\n                <Typography style={{flex: 1, paddingRight: '5%', fontWeight: 'bold'}}>{code.code}</Typography>\n                <div style={{flex: 10}}>\n                    <Typography style={{color: color, fontWeight: 'bold'}}>{code.title}</Typography>\n                    <Typography variant='caption'>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                {code.children.map(nestedCode => createAccordion(nestedCode, expanded, setExpanded, matchDepth + 1, theme))}\n            </AccordionDetails>\n        </Accordion>\n    } else {\n        return <Accordion\n            elevation={2}\n            disabled={!code.enabled}\n            expanded={expanded === code.code}\n            style={{background: colors(matchDepth)}}\n        >\n            <AccordionSummary style={{display: 'flex'}}>\n                <Typography style={{flex: 1, paddingRight: '5%', fontWeight: 'bold'}}>{code.code}</Typography>\n                <div style={{flex: 10}}>\n                    <Typography style={{color: color, fontWeight: 'bold'}}>{code.title}</Typography>\n                    <Typography variant='caption'>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n        </Accordion>\n    }\n}\n\nfunction flatten(json: ddcCode, flatArray: option[]): option[] {\n    if (json.enabled) {\n        let notes = ''\n        if (json.notes) {\n            notes = ` (${json.notes})`\n        }\n        flatArray.push({value: json.code, label: `${json.code}: ${json.title}` + notes})\n    }\n    if (json.children) {\n        json.children.forEach(child => flatten(child, flatArray))\n    }\n    return flatArray\n\n}\n\ninterface option {\n    value: string,\n    label: string\n}\n\nfunction App() {\n    const theme = useTheme()\n    const [expanded, setExpanded] = useState<string | null>('200');\n    const [ddc, setDDC] = useState<ddcCode[]>([]);\n    const [searchOptions, setSearchOptions] = useState<option[]>([]);\n\n    useEffect(() => {\n        setDDC(ddcJson)\n        const flatJson = ddcJson.map(ddc => flatten(ddc, []))[2] //2 for Religion 200\n        setSearchOptions(flatJson)\n    }, []);\n\n    return (\n        <div style={{\n            background: theme.palette.background.default,\n            height: '100vh',\n            display: 'flex',\n            alignItems: \"center\",\n            flexDirection: \"column\"\n        }}>\n            <CssBaseline/>\n            <div style={{\n                textAlign: 'center',\n                paddingLeft: 20,\n                paddingTop: 20,\n                paddingRight: 20,\n                width: '100%',\n                maxWidth: 900\n            }}>\n                <Typography style={{marginBottom: 10}} variant=\"h4\">Dewey Decimal Classification</Typography>\n                <div style={{textAlign: 'left', marginBottom: 10, width: '100%'}}>\n                    <Select isClearable options={searchOptions} onChange={e => setExpanded(e!.value)}\n                            placeholder={'Search...'}/>\n                </div>\n            </div>\n            <div style={{maxWidth: 900, padding: 20, width: '100%'}}>\n                {ddc?.map(code => createAccordion(code, expanded, setExpanded, 1, theme))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {createTheme} from \"@mui/material\";\nimport {blueGrey} from \"@mui/material/colors\";\n\nexport const defaultTheme = createTheme({\n    palette: {\n        background:{\n            default: blueGrey['A100']\n        }\n    },\n    typography: {\n        body1: {\n            fontWeight: 500,\n        },\n    }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ThemeProvider} from '@mui/material';\nimport {defaultTheme} from './Theme'\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={defaultTheme}>\n            <App/>\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
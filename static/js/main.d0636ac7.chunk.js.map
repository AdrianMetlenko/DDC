{"version":3,"sources":["functions/FlattenSearchOptions.ts","theme/MUIColours.ts","functions/CreateAccordionsRecursive.tsx","Theme.ts","components/TopBar.tsx","App.tsx","index.tsx"],"names":["groups","flatten","json","flatArray","notes","group","code","slice","filter","item","id","length","title","push","label","disabled","enabled","children","forEach","child","blue","main","blueDark","grey","createAccordion","expanded","setExpanded","matchDepth","theme","match","expand","selectedLineColor","depth","purple","cyan","orange","indigo","deepOrange","colors","palette","mode","selectedTextColor","text","primary","Accordion","disableGutters","elevation","onChange","levelUp","replace","sx","pl","borderLeft","borderTop","borderColor","display","bgcolor","AccordionSummary","expandIcon","ExpandMore","color","ml","borderRadius","Typography","flex","pr","fontWeight","style","variant","AccordionDetails","map","nestedCode","ColorModeContext","React","createContext","toggleColorMode","TopBar","height","colorMode","useContext","useTheme","AppBar","position","justifyContent","Toolbar","width","textAlign","IconButton","marginLeft","onClick","Brightness7","Brightness4","App","useState","setMode","useMemo","prevMode","createTheme","divider","primaryDark","background","default","paper","secondary","blueGrey","shape","spacing","getDesignTokens","ddc","setDDC","searchOptions","setSearchOptions","useEffect","ddcJson","flatJson","Provider","value","ThemeProvider","Box","mt","alignItems","flexDirection","Helmet","CssBaseline","paddingLeft","paddingTop","paddingRight","maxWidth","marginBottom","Autocomplete","options","getOptionDisabled","option","groupBy","event","newValue","renderInput","params","TextField","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0636ac7.chunk.js","sourcesContent":["import {ddcCode, searchOption} from \"../types/types\";\n\nlet groups: {[key: string]: string} = {}\n\nexport function flatten(json: ddcCode, flatArray: searchOption[]): searchOption[] {\n    let notes = ''\n    if (json.notes) {\n        notes = ` (${json.notes})`\n    }\n    const group = json.code.slice(0, 2) + '0'\n\n    if(flatArray.filter(item => item.id === json.code).length === 0 && json.code !== '200'){\n        if(json.code.length === 3 && json.code[0] === '2' && json.code[2] === '0'){\n            groups[json.code] = json.title\n        }\n        flatArray.push({id: json.code, label: `${json.code}: ${json.title}` + notes, group: `${group}: ${groups[group]}`, disabled: !json.enabled})\n    }\n    if (json.children) {\n        json.children.forEach(child => flatten(child, flatArray))\n    }\n    return flatArray\n}","export const blue = {\n    50: '#F0F7FF',\n    100: '#C2E0FF',\n    200: '#A5D8FF',\n    300: '#66B2FF',\n    400: '#3399FF',\n    main: '#007FFF', // contrast 3.83:1\n    500: '#007FFF',\n    600: '#0072E5',\n    700: '#0059B2',\n    800: '#004C99',\n    900: '#003A75',\n};\nexport const blueDark = {\n    50: '#E2EDF8',\n    100: '#CEE0F3',\n    200: '#91B9E3',\n    300: '#5090D3',\n    main: '#5090D3',\n    400: '#265D97',\n    500: '#1E4976',\n    600: '#173A5E',\n    700: '#132F4C', // contrast 13.64:1\n    800: '#001E3C',\n    900: '#0A1929',\n};\n\nexport const grey = {\n    50: '#F3F6F9',\n    100: '#EAEEF3',\n    200: '#E5E8EC',\n    300: '#D7DCE1',\n    400: '#BFC7CF',\n    500: '#AAB4BE',\n    600: '#7F8E9D',\n    700: '#46505A', // contrast 8.21:1\n    800: '#2F3A45', // contrast 11.58:1\n    900: '#20262D',\n};","import {ddcCode} from \"../types/types\";\nimport {Accordion, AccordionDetails, AccordionSummary, alpha, Typography} from \"@mui/material\";\nimport {ExpandMore} from \"@mui/icons-material\";\nimport React from \"react\";\nimport {blueGrey, cyan, deepOrange, indigo, lime, orange, purple} from \"@mui/material/colors\";\nimport {blueDark, grey} from \"../theme/MUIColours\";\n\nconst colors = (depth: number) => {\n    switch (depth) {\n        case 1:\n            return purple\n        case 2:\n            return cyan\n        case 3:\n            return orange\n        case 4:\n        case 5:\n            return indigo\n        case 6:\n            return deepOrange\n        default:\n            return blueDark\n    }\n}\n\n\nexport function createAccordion(code: ddcCode, expanded: string | null, setExpanded: any, matchDepth: number, theme: any) {\n\n    if (code.code.slice(0, matchDepth).slice(-1) === '.') {\n        matchDepth = matchDepth + 1\n    }\n    const match = code.code.slice(0, matchDepth)\n    let expand = false\n    if (expanded) {\n        expand = expanded.slice(0, matchDepth) === match\n    }\n    const selectedLineColor = colors(matchDepth)[theme.palette.mode === 'light' ? '500' : '400']\n    const selectedTextColor = expand ? selectedLineColor : theme.palette.text.primary\n\n    if (code.children) {\n        return <Accordion\n            disableGutters\n            elevation={code.enabled ? 3 : 1}\n            disabled={!code.enabled}\n            expanded={expand}\n            onChange={() => {\n                if (expanded === code.code) {\n                    if (code.code.length > 4) {\n                        setExpanded(code.code.slice(0, -1))\n                    } else {\n                        let trimmed = code.code.replace(/[.0]/g, '')\n                        let levelUp = trimmed.slice(0, -1)\n                        while (levelUp.length < 3) {\n                            levelUp = levelUp + '0'\n                        }\n                        if (levelUp === '000') {\n                            setExpanded('200')\n                        } else {\n                            setExpanded(levelUp)\n                        }\n\n                    }\n                } else {\n                    setExpanded(code.code)\n                }\n            }}\n            sx={{\n                pl:1,\n                borderLeft: expand ? 3 : 0,\n                borderTop: expand ? 3 : 0,\n                borderColor: selectedLineColor,\n                '&:before': {\n                    display: 'none',\n                },\n                '&.Mui-disabled': {\n                    bgcolor: 'background.paper',\n                },\n\n            }}\n        >\n            <AccordionSummary expandIcon={<ExpandMore sx={{ color: selectedTextColor }}/>} sx={{display: 'flex', ml: 4, borderRadius: 0}}>\n                <Typography sx={{\n                    color: selectedTextColor,\n                    flex: 1,\n                    pr: '5%',\n                    fontWeight: 'bold'\n                }}>{code.code}</Typography>\n                <div style={{flex: 10}}>\n                    <Typography sx={{fontWeight: 'bold', color: selectedTextColor }}>{code.title}</Typography>\n                    <Typography sx={{color: selectedTextColor }} variant='caption'>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                {code.children.map(nestedCode => createAccordion(nestedCode, expanded, setExpanded, matchDepth + 1, theme))}\n            </AccordionDetails>\n        </Accordion>\n    } else {\n        return <Accordion\n            disableGutters\n            elevation={code.enabled ? 3 : 1}\n            disabled={!code.enabled}\n            expanded={expanded === code.code}\n            sx={{\n                pl:1,\n                borderLeft: expanded === code.code ? 3 : 0,\n                borderTop: expanded === code.code ? 3 : 0,\n                borderColor: selectedLineColor,\n                '&:before': {\n                    display: 'none',\n                },\n                color: selectedTextColor,\n                fontWeight: 'bold',\n                '&.Mui-disabled': {\n                    bgcolor: 'background.paper'\n                },\n            }}\n            onChange={() => setExpanded(code.code)}\n        >\n            <AccordionSummary sx={{display: 'flex', ml: 4}}>\n                <Typography sx={{\n                    flex: 1,\n                    pr: '5%',\n                    fontWeight: 'bold',\n                    color: selectedTextColor\n                }}>{code.code}</Typography>\n                <div style={{flex: 10}}>\n                    <Typography sx={{fontWeight: 'bold', color: selectedTextColor }}>{code.title}</Typography>\n                    <Typography sx={{color: selectedTextColor }}variant='caption'>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n        </Accordion>\n    }\n}\n","import React, {useContext} from \"react\";\n\nimport {\n    PaletteMode, ThemeOptions\n} from '@mui/material';\nimport {blue, blueDark, grey} from \"./theme/MUIColours\";\nimport {blueGrey} from \"@mui/material/colors\";\n\nexport const ColorModeContext = React.createContext({\n    toggleColorMode: () => {\n    }\n})\nexport const useColorModeContext = () => useContext(ColorModeContext);\n\nexport const getDesignTokens = (mode: PaletteMode) => ({\n    palette: {\n        primary: {\n            ...blue,\n            ...(mode === 'dark' && {\n                main: blue[400],\n            }),\n        },\n        divider: mode === 'dark' ? blueDark[700] : grey[200],\n        primaryDark: blueDark,\n        mode,\n        ...(mode === 'dark' && {\n            background: {\n                default: blueDark[900],\n                paper: blueDark[800],\n            },\n        }),\n        ...(mode === 'light' && {\n            text: {\n                primary: grey[900],\n                secondary: grey[700],\n            },\n        }),\n        ...(mode === 'dark' && {\n            text: {\n                primary: '#fff',\n                secondary: grey[500],\n            },\n        }),\n        ...(mode === 'light' && {\n            background: {\n                default: blueGrey['50'],\n                paper: '#FFFFFF'\n            },\n        }),\n        grey,\n    },\n    shape: {\n        borderRadius: 0,\n    },\n    spacing: 10,\n} as ThemeOptions);","import  {AppBar, IconButton, Toolbar, Typography, useTheme} from \"@mui/material\";\nimport {Brightness4, Brightness7, More, Search} from \"@mui/icons-material\";\nimport {useColorModeContext} from \"../Theme\";\n\nfunction TopBar({height}: {height: number}) {\n    const colorMode = useColorModeContext()\n    const theme = useTheme()\n    return (\n        <AppBar position=\"fixed\" elevation={5} sx={{height: height, justifyContent: 'center'}}>\n            <Toolbar sx={{width: '100%'}}>\n                <div style={{flex: 1}}/>\n                <Typography variant=\"h5\" sx={{flex: 1, textAlign: 'center'}}>\n                    Dewey Decimal Classification\n                </Typography>\n                <div style={{flex: 1, display: 'flex'}}>\n                    <IconButton style={{marginLeft: 'auto'}} onClick={colorMode.toggleColorMode} color=\"inherit\">\n                        {theme.palette.mode === 'dark' ? <Brightness7/> : <Brightness4/>}\n                    </IconButton>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default TopBar","import React, {useEffect, useMemo, useState} from 'react';\nimport {\n    CssBaseline,\n    TextField, Autocomplete, Paper, PaletteMode, createTheme, ThemeProvider, Box\n} from '@mui/material';\nimport ddcJson from './ddc.json'\nimport {Helmet} from 'react-helmet'\nimport {ddcCode, searchOption} from \"./types/types\";\nimport {flatten} from \"./functions/FlattenSearchOptions\";\nimport {createAccordion} from \"./functions/CreateAccordionsRecursive\";\nimport TopBar from \"./components/TopBar\";\nimport {ColorModeContext, getDesignTokens} from \"./Theme\";\n\nfunction App() {\n    const [mode, setMode] = useState<PaletteMode>('light');\n    // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    const colorMode = useMemo(\n        () => ({\n            // The dark mode switch would invoke this method\n            toggleColorMode: () => {\n                setMode((prevMode: PaletteMode) =>\n                    prevMode === 'light' ? 'dark' : 'light',\n                );\n            },\n        }),\n        [],\n    );\n\n    // Update the theme only if the mode changes\n    const theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n\n    const [expanded, setExpanded] = useState<string | null>('200');\n    const [ddc, setDDC] = useState<ddcCode[]>([]);\n    const [searchOptions, setSearchOptions] = useState<searchOption[]>([]);\n\n    useEffect(() => {\n        setDDC(ddcJson)\n        const flatJson = ddcJson.map(ddc => flatten(ddc, []))[2] //2 for Religion 200\n        setSearchOptions(flatJson)\n    }, []);\n\n    return (\n        <ColorModeContext.Provider value={colorMode}>\n            <ThemeProvider theme={theme}>\n                <TopBar height={70}/>\n                <Box sx={{\n                    mt: 7,\n                    display: 'flex',\n                    alignItems: \"center\",\n                    flexDirection: \"column\",\n                    bgcolor: 'background.default'\n                }}>\n                    <Helmet>\n                        <title>{\"DDC Index\"}</title>\n                    </Helmet>\n                    <CssBaseline/>\n\n                    <Box sx={{\n                        textAlign: 'center',\n                        paddingLeft: 2,\n                        paddingTop: 2,\n                        paddingRight: 2,\n                        width: '100%',\n                        maxWidth: 900\n                    }}>\n                        <Box sx={{textAlign: 'left', marginBottom: 1, width: '100%', bgcolor: 'background.paper'}}>\n                            <Autocomplete\n                                options={searchOptions}\n                                getOptionDisabled={(option) => option.disabled}\n                                groupBy={(option) => option.group}\n                                onChange={(event, newValue) => {\n                                    if (newValue) {\n                                        setExpanded(newValue.id)\n                                    } else {\n                                        setExpanded(newValue)\n                                    }\n                                }}\n                                renderInput={(params) => <TextField {...params} variant='outlined' label=\"Search...\"/>}\n                            />\n                        </Box>\n                    </Box>\n                    <div style={{maxWidth: 900, padding: 20, width: '100%'}}>\n                        {ddc?.map(code => createAccordion(code, expanded, setExpanded, 1, theme))}\n                    </div>\n                </Box>\n            </ThemeProvider>\n        </ColorModeContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["App.tsx","Theme.js","index.tsx"],"names":["colors","depth","color","grey","createAccordion","code","expanded","setExpanded","matchDepth","theme","slice","match","expand","palette","error","main","text","children","Accordion","elevation","disabled","enabled","onChange","style","background","AccordionSummary","expandIcon","ExpandMore","Typography","sx","width","flexShrink","title","variant","notes","AccordionDetails","map","nestedCode","flatten","json","flatArray","push","value","label","forEach","child","App","useTheme","useState","ddc","setDDC","searchOptions","setSearchOptions","useEffect","ddcJson","flatJson","default","height","display","alignItems","flexDirection","CssBaseline","textAlign","marginTop","marginBottom","options","e","placeholder","maxWidth","padding","defaultTheme","createTheme","blueGrey","typography","body1","fontWeight","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.73692ea0.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {AccordionDetails, AccordionSummary, Typography, CssBaseline, useTheme, Accordion} from '@mui/material';\nimport {ExpandMore} from '@mui/icons-material';\nimport ddcJson from './ddc.json'\nimport Select from 'react-select'\nimport {grey} from \"@mui/material/colors\";\n\ninterface ddcCode {\n    code: string\n    title: string\n    notes?: string\n    children?: ddcCode[]\n    enabled: boolean\n}\n\nconst colors = (depth: number) => {\n    const color = grey\n    switch (depth) {\n        case 1:\n            return color[50]\n        case 2:\n            return color[100]\n        case 3:\n            return color[300]\n        case 4:\n            return color[400]\n        case 5:\n            return color[500]\n        case 6:\n            return color[600]\n    }\n}\n\nfunction createAccordion(code: ddcCode, expanded: string, setExpanded: any, matchDepth: number, theme: any) {\n\n    if (code.code.slice(0, matchDepth).slice(-1) === '.') {\n        matchDepth = matchDepth + 1\n    }\n    const match = code.code.slice(0, matchDepth)\n    const expand = expanded.slice(0, matchDepth) === match\n    const color = expand ? theme.palette.error.main : theme.palette.text.main\n\n\n    if (code.children) {\n        return <Accordion elevation={2} disabled={!code.enabled} expanded={expand}\n                          onChange={() => setExpanded(code.code)} style={{background: colors(matchDepth)}}>\n            <AccordionSummary expandIcon={<ExpandMore/>}>\n                <Typography sx={{width: '10%', flexShrink: 0}}>{code.code}</Typography>\n                <div>\n                    <Typography style={{color: color}}>{code.title}</Typography>\n                    <Typography variant='caption'>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                {code.children.map(nestedCode => createAccordion(nestedCode, expanded, setExpanded, matchDepth + 1, theme))}\n            </AccordionDetails>\n        </Accordion>\n    } else {\n        return <Accordion elevation={2} disabled={!code.enabled} expanded={expanded === code.code}\n                          onChange={() => setExpanded(code.code)} style={{background: colors(matchDepth)}}>\n            <AccordionSummary expandIcon={<ExpandMore/>}>\n                <Typography sx={{width: '10%', flexShrink: 0}}>{code.code}</Typography>\n                <div>\n                    <Typography style={{color: color}}>{code.title}</Typography>\n                    <Typography variant='caption'>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n        </Accordion>\n    }\n}\n\nfunction flatten(json: ddcCode, flatArray: option[]): option[] {\n    if(json.enabled){\n        flatArray.push({value: json.code, label: `${json.code}: ${json.title}`})\n    }\n    if (json.children) {\n        json.children.forEach(child => flatten(child, flatArray))\n    }\n    return flatArray\n\n}\n\ninterface option {\n    value: string,\n    label: string\n}\n\nfunction App() {\n    const theme = useTheme()\n    const [expanded, setExpanded] = useState<string>('210');\n    const [ddc, setDDC] = useState<ddcCode[]>([]);\n    const [searchOptions, setSearchOptions] = useState<option[]>([]);\n\n    useEffect(() => {\n        setDDC(ddcJson)\n        const flatJson = ddcJson.map(ddc => flatten(ddc, []))[2] //2 for Religion 200\n        setSearchOptions(flatJson)\n    }, []);\n\n    return (\n        <div style={{\n            background: theme.palette.background.default,\n            height: '100vh',\n            display: 'flex',\n            alignItems: \"center\",\n            flexDirection: \"column\"\n        }}>\n            <CssBaseline/>\n            <div style={{textAlign: 'center', marginTop: 20}}>\n                <Typography style={{marginBottom: 10}} variant=\"h4\">Dewey Decimal Classification</Typography>\n                <div style={{textAlign: 'left'}}>\n                    <Select options={searchOptions} onChange={e => setExpanded(e!.value)} placeholder={'Search...'}/>\n                </div>\n\n            </div>\n            <div style={{maxWidth: 1000, padding: 40}}>\n                {ddc?.map(code => createAccordion(code, expanded, setExpanded, 1, theme))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {createTheme} from \"@mui/material\";\nimport {blueGrey} from \"@mui/material/colors\";\n\nexport const defaultTheme = createTheme({\n    palette: {\n        background:{\n            default: blueGrey['A100']\n        }\n    },\n    typography: {\n        body1: {\n            fontWeight: 500,\n        },\n    }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ThemeProvider} from '@mui/material';\nimport {defaultTheme} from './Theme'\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={defaultTheme}>\n            <App/>\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["functions/FlattenSearchOptions.ts","theme/MUIColours.ts","functions/CreateAccordionsRecursive.tsx","Theme.ts","types/constants.ts","components/TopBar.tsx","components/SearchBar.tsx","App.tsx","functions/CreateBreadcrumb.ts","index.tsx"],"names":["groups","flatten","json","flatArray","notes","group","code","slice","filter","item","id","length","title","push","label","disabled","enabled","children","forEach","child","blueDark","main","grey","createAccordion","expanded","setExpanded","matchDepth","theme","match","expand","selectedLineColor","depth","purple","cyan","orange","indigo","deepOrange","colors","palette","mode","selectedTextColor","text","primary","Accordion","disableGutters","elevation","onChange","levelUp","replace","sx","pl","borderLeft","borderTop","borderColor","display","bgcolor","AccordionSummary","expandIcon","ExpandMore","color","ml","Typography","flex","pr","fontWeight","style","variant","AccordionDetails","map","nestedCode","ColorModeContext","React","createContext","toggleColorMode","topBar","mobile","laptop","desktop","topBarMargin","searchBarMargin","TopBar","openCodes","colorMode","useContext","useTheme","AppBar","position","height","justifyContent","alignContent","Toolbar","width","flexDirection","mb","mt","Box","alignItems","IconButton","marginLeft","onClick","Brightness7","Brightness4","Breadcrumbs","separator","NavigateNext","fontSize","SearchBar","searchOptions","zIndex","Autocomplete","maxWidth","padding","options","getOptionDisabled","option","groupBy","event","newValue","renderInput","params","TextField","App","useState","setMode","useMemo","prevMode","createTheme","blueGrey","dark","light","hover","secondary","background","default","paper","lightBlue","divider","shape","borderRadius","spacing","breakpoints","values","tablet","typography","crumbs","getDesignTokens","ddc","setDDC","setSearchOptions","setOpenCodes","useEffect","ddcJson","flatJson","codeChars","split","pushCode","join","pop","crumb","createBreadcrumb","reverse","Provider","value","ThemeProvider","Helmet","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.632df8f0.chunk.js","sourcesContent":["import {ddcCode, searchOption} from \"../types/types\";\n\nlet groups: {[key: string]: string} = {}\n\nexport function flatten(json: ddcCode, flatArray: searchOption[]): searchOption[] {\n    let notes = ''\n    if (json.notes) {\n        notes = ` (${json.notes})`\n    }\n    const group = json.code.slice(0, 2) + '0'\n\n    if(flatArray.filter(item => item.id === json.code).length === 0 && json.code !== '200'){\n        if(json.code.length === 3 && json.code[0] === '2' && json.code[2] === '0'){\n            groups[json.code] = json.title\n        }\n        flatArray.push({id: json.code, label: `${json.code}: ${json.title}` + notes, group: `${group}: ${groups[group]}`, disabled: !json.enabled, title: json.title})\n    }\n    if (json.children) {\n        json.children.forEach(child => flatten(child, flatArray))\n    }\n    return flatArray\n}","export const blue = {\n    50: '#F0F7FF',\n    100: '#C2E0FF',\n    200: '#A5D8FF',\n    300: '#66B2FF',\n    400: '#3399FF',\n    main: '#007FFF', // contrast 3.83:1\n    500: '#007FFF',\n    600: '#0072E5',\n    700: '#0059B2',\n    800: '#004C99',\n    900: '#003A75',\n};\nexport const blueDark = {\n    50: '#E2EDF8',\n    100: '#CEE0F3',\n    200: '#91B9E3',\n    300: '#5090D3',\n    main: '#5090D3',\n    400: '#265D97',\n    500: '#1E4976',\n    600: '#173A5E',\n    700: '#132F4C', // contrast 13.64:1\n    800: '#001E3C',\n    900: '#0A1929',\n};\n\nexport const grey = {\n    50: '#F3F6F9',\n    100: '#EAEEF3',\n    200: '#E5E8EC',\n    300: '#D7DCE1',\n    400: '#BFC7CF',\n    500: '#AAB4BE',\n    600: '#7F8E9D',\n    700: '#46505A', // contrast 8.21:1\n    800: '#2F3A45', // contrast 11.58:1\n    900: '#20262D',\n};","import {ddcCode} from \"../types/types\";\nimport {Accordion, AccordionDetails, AccordionSummary, Typography} from \"@mui/material\";\nimport {ExpandMore} from \"@mui/icons-material\";\nimport React from \"react\";\nimport {cyan, deepOrange, indigo, orange, purple} from \"@mui/material/colors\";\nimport {blueDark} from \"../theme/MUIColours\";\n\nconst colors = (depth: number) => {\n    switch (depth) {\n        case 1:\n            return purple\n        case 2:\n            return cyan\n        case 3:\n            return orange\n        case 4:\n        case 5:\n            return indigo\n        case 6:\n            return deepOrange\n        default:\n            return blueDark\n    }\n}\n\nexport function createAccordion(code: ddcCode, expanded: string | null, setExpanded: any, matchDepth: number, theme: any) {\n\n    if (code.code.slice(0, matchDepth).slice(-1) === '.') {\n        matchDepth = matchDepth + 1\n    }\n    const match = code.code.slice(0, matchDepth)\n    let expand = false\n    if (expanded) {\n        expand = expanded.slice(0, matchDepth) === match\n    }\n\n    const selectedLineColor = colors(matchDepth)[theme.palette.mode === 'light' ? '500' : '400']\n    const selectedTextColor = expand ? selectedLineColor : theme.palette.text.primary\n\n    if (code.children) {\n        return <Accordion\n            disableGutters\n            elevation={code.enabled ? 3 : 1}\n            disabled={!code.enabled}\n            expanded={expand}\n            onChange={() => {\n                if (expanded === code.code) {\n                    if (code.code.length > 4) {\n                        setExpanded(code.code.slice(0, -1))\n                    } else {\n                        let trimmed = code.code.replace(/[.0]/g, '')\n                        let levelUp = trimmed.slice(0, -1)\n                        while (levelUp.length < 3) {\n                            levelUp = levelUp + '0'\n                        }\n                        if (levelUp === '000') {\n                            setExpanded(null)\n                        } else {\n                            setExpanded(levelUp)\n                        }\n\n                    }\n                } else {\n                    setExpanded(code.code)\n                }\n            }}\n            sx={{\n                pl:1,\n                borderLeft: expand ? 3 : 0,\n                borderTop: expand ? 3 : 0,\n                borderColor: selectedLineColor,\n                '&:before': {\n                    display: 'none',\n                },\n                '&.Mui-disabled': {\n                    bgcolor: 'background.paper',\n                },\n\n            }}\n        >\n            <AccordionSummary expandIcon={<ExpandMore sx={{ color: selectedTextColor }}/>} sx={{display: 'flex', ml: 4}}>\n                <Typography sx={{\n                    color: selectedTextColor,\n                    flex: 1,\n                    pr: '5%',\n                    fontWeight: 'bold'\n                }}>{code.code}</Typography>\n                <div style={{flex: 10}}>\n                    <Typography sx={{fontWeight: 'bold', color: selectedTextColor }}>{code.title}</Typography>\n                    <Typography sx={{color: selectedTextColor }} variant='caption'>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                {code.children.map(nestedCode => createAccordion(nestedCode, expanded, setExpanded, matchDepth + 1, theme))}\n            </AccordionDetails>\n        </Accordion>\n    } else {\n        return <Accordion\n            disableGutters\n            elevation={code.enabled ? 3 : 1}\n            disabled={!code.enabled}\n            expanded={expanded === code.code}\n            sx={{\n                pl:1,\n                borderLeft: expanded === code.code ? 3 : 0,\n                borderTop: expanded === code.code ? 3 : 0,\n                borderColor: selectedLineColor,\n                '&:before': {\n                    display: 'none',\n                },\n                color: selectedTextColor,\n                fontWeight: 'bold',\n                '&.Mui-disabled': {\n                    bgcolor: 'background.paper'\n                },\n            }}\n            onChange={() => setExpanded(code.code)}\n        >\n            <AccordionSummary sx={{display: 'flex', ml: 4}}>\n                <Typography sx={{\n                    flex: 1,\n                    pr: '5%',\n                    fontWeight: 'bold',\n                    color: selectedTextColor\n                }}>{code.code}</Typography>\n                <div style={{flex: 10}}>\n                    <Typography sx={{fontWeight: 'bold', color: selectedTextColor }}>{code.title}</Typography>\n                    <Typography sx={{color: selectedTextColor }}variant='caption'>{code.notes}</Typography>\n                </div>\n            </AccordionSummary>\n        </Accordion>\n    }\n}\n","import React, {useContext} from \"react\";\n\nimport {\n    PaletteMode, ThemeOptions\n} from '@mui/material';\nimport {blueDark, grey} from \"./theme/MUIColours\";\nimport {blueGrey, lightBlue} from \"@mui/material/colors\";\n\nexport const ColorModeContext = React.createContext({\n    toggleColorMode: () => {\n    }\n})\nexport const useColorModeContext = () => useContext(ColorModeContext);\n\ndeclare module '@mui/material/styles' {\n    interface BreakpointOverrides {\n        xs: false; // removes the `xs` breakpoint\n        sm: false;\n        md: false;\n        lg: false;\n        xl: false;\n        mobile: true; // adds the `mobile` breakpoint\n        tablet: true;\n        laptop: true;\n        desktop: true;\n    }\n}\n\ndeclare module '@mui/material/styles' {\n    interface TypographyVariants {\n        crumbs: React.CSSProperties;\n    }\n\n    // allow configuration using `createTheme`\n    interface TypographyVariantsOptions {\n        crumbs?: React.CSSProperties;\n    }\n}\n\n// Update the Typography's variant prop options\ndeclare module '@mui/material/Typography' {\n    interface TypographyPropsVariantOverrides {\n        crumbs: true;\n    }\n}\n\nexport const getDesignTokens = (mode: PaletteMode) => ({\n    palette: {\n        ...(mode === 'light' && {\n            primary: {\n                main:blueGrey['100'],\n                dark:blueGrey['500'],\n                light:blueGrey['50'],\n                text:blueGrey['50'],\n                hover:blueGrey['300']\n            },\n            secondary: blueDark,\n            background: {\n                default: blueGrey['100'],\n                paper: blueGrey['50']\n            },\n        }),\n        ...(mode === 'dark' && {\n            primary: {\n                main:blueDark['800'],\n                dark:blueDark['900'],\n                light:blueDark['700'],\n                text:blueGrey['50'],\n                hover:blueGrey['300']\n            },\n            secondary: lightBlue,\n            background: {\n                default: blueDark[900],\n                paper: blueDark[800],\n            },\n        }),\n        divider: mode === 'dark' ? blueDark[700] : grey[200],\n        ...(mode === 'light' && {\n            text: {\n                primary: grey[900],\n                secondary: grey[700],\n            },\n        }),\n        ...(mode === 'dark' && {\n            text: {\n                primary: blueGrey['200'],\n                secondary: blueGrey['300'],\n            },\n        }),\n\n    },\n    shape: {\n        borderRadius: 10,\n    },\n    spacing: 10,\n    breakpoints: {\n        values: {\n            mobile: 0,\n            tablet: 640,\n            laptop: 1024,\n            desktop: 1200,\n        },\n    },\n    typography: {\n        crumbs: {\n            fontSize: 18,\n        },\n    },\n} as ThemeOptions);","export const topBar = {\n    mobile: 120,\n    laptop: 100,\n    desktop: 70\n}\n\nexport const topBarMargin = {\n    mobile: topBar.mobile/10,\n    laptop: topBar.laptop/10,\n    desktop: topBar.desktop/10\n}\n\nexport const searchBar = 80\n\nexport const searchBarMargin = {\n    mobile: (topBar.mobile + searchBar)/10,\n    laptop: (topBar.laptop + searchBar)/10,\n    desktop: (topBar.desktop + searchBar)/10\n}","import {AppBar, Box, Breadcrumbs, IconButton, Toolbar, Typography, useTheme} from \"@mui/material\";\nimport {Brightness4, Brightness7, NavigateNext} from \"@mui/icons-material\";\nimport {useColorModeContext} from \"../Theme\";\nimport {topBar} from \"../types/constants\";\n\nfunction TopBar({openCodes, setExpanded}: { setExpanded: any, openCodes: { [key: string]: string }[] }) {\n    const colorMode = useColorModeContext()\n    const theme = useTheme()\n    return (\n        <AppBar position=\"fixed\" elevation={2} sx={{\n            height: topBar,\n            justifyContent: 'center',\n            bgcolor: 'primary.dark',\n            alignContent: 'flex-start',\n            display: 'flex'\n        }}>\n            <Toolbar\n                sx={{width: 1, display: 'flex', flexDirection: 'column', justifyContent: 'center', mb: 'auto', mt: 1}}>\n                <Box sx={{width: 1, display: {mobile: 'flex', desktop: \"none\"}, alignItems: 'center'}}>\n                    <Typography variant=\"h5\" sx={{\n                        color: 'primary.text',\n                        fontWeight: 600\n                    }}>Dewey Decimal\n                        Classification</Typography>\n                    <Box sx={{ml: 'auto', width: 50, display: {mobile: 'flex', desktop: 'none'}}}>\n                        <IconButton style={{marginLeft: 'auto'}} onClick={colorMode.toggleColorMode} color=\"inherit\">\n                            {theme.palette.mode === 'dark' ? <Brightness7 sx={{color: 'primary.text'}}/> :\n                                <Brightness4 sx={{color: 'primary.text'}}/>}\n                        </IconButton>\n                    </Box>\n                </Box>\n                <Box sx={{width: 1, display: 'flex', alignItems: 'center'}}>\n                    <Breadcrumbs sx={{flex: 4}}\n                                 separator={<NavigateNext fontSize=\"medium\" sx={{color: 'primary.text'}}/>}>\n                        <Typography variant=\"h5\" sx={{\n                            color: 'primary.text',\n                            fontWeight: 600,\n                            display: {mobile: 'none', desktop: \"inherit\"}\n                        }}>Dewey Decimal\n                            Classification</Typography>\n                        {openCodes.map(item =>\n                            <Typography\n                                variant=\"crumbs\"\n                                sx={{color: 'primary.text', \"&:hover\": {color: 'primary.hover'}}}\n                                onClick={() => setExpanded(item.code)}\n                            >{item.title}</Typography>\n                        )}\n                    </Breadcrumbs>\n                    <Box sx={{ml: 'auto', width: 50, display: {mobile: 'none', desktop: 'flex'}}}>\n                        <IconButton\n                            onClick={colorMode.toggleColorMode} color=\"inherit\">\n                            {theme.palette.mode === 'dark' ? <Brightness7 sx={{color: 'primary.text'}}/> :\n                                <Brightness4 sx={{color: 'primary.text'}}/>}\n                        </IconButton>\n                    </Box>\n                </Box>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default TopBar","import {\n    AppBar,\n    Autocomplete,\n    TextField,\n    Toolbar,\n} from \"@mui/material\";\nimport React from \"react\";\nimport {searchOption} from \"../types/types\";\nimport {searchBar, topBarMargin} from \"../types/constants\";\n\nfunction SearchBar({searchOptions, setExpanded}: { searchOptions: searchOption[], setExpanded: any }) {\n    return (\n        <AppBar position=\"fixed\" elevation={5} sx={{height: searchBar, justifyContent: 'center', mt: topBarMargin, zIndex: 1090, bgcolor:'primary.light', display: 'flex'}}>\n            <Toolbar sx={{width: '100%', justifyContent: 'center'}}>\n                <Autocomplete\n                    sx={{width: 1, maxWidth: 900, padding: 2}}\n                    options={searchOptions}\n                    getOptionDisabled={(option) => option.disabled}\n                    groupBy={(option) => option.group}\n                    onChange={(event, newValue) => {\n                        if (newValue) {\n                            setExpanded(newValue.id)\n                        } else {\n                            setExpanded(newValue)\n                        }\n                    }}\n                    renderInput={(params) => <TextField {...params} variant='outlined' label=\"Search...\"/>}\n                />\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default SearchBar","import React, {useEffect, useMemo, useState} from 'react';\nimport {\n    CssBaseline,\n    PaletteMode, createTheme, ThemeProvider, Box\n} from '@mui/material';\nimport ddcJson from './ddc.json'\nimport {Helmet} from 'react-helmet'\nimport {ddcCode, searchOption} from \"./types/types\";\nimport {flatten} from \"./functions/FlattenSearchOptions\";\nimport {createAccordion} from \"./functions/CreateAccordionsRecursive\";\nimport TopBar from \"./components/TopBar\";\nimport {ColorModeContext, getDesignTokens} from \"./Theme\";\nimport SearchBar from \"./components/SearchBar\";\nimport {createBreadcrumb} from \"./functions/CreateBreadcrumb\";\nimport {searchBarMargin} from \"./types/constants\";\n\nfunction App() {\n    const [mode, setMode] = useState<PaletteMode>('light');\n    // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    const colorMode = useMemo(\n        () => ({\n            // The dark mode switch would invoke this method\n            toggleColorMode: () => {\n                setMode((prevMode: PaletteMode) =>\n                    prevMode === 'light' ? 'dark' : 'light',\n                );\n            },\n        }),\n        [],\n    );\n\n    // Update the theme only if the mode changes\n    const theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n\n    const [expanded, setExpanded] = useState<string | null>('200');\n    const [ddc, setDDC] = useState<ddcCode[]>([]);\n    const [searchOptions, setSearchOptions] = useState<searchOption[]>([]);\n    const [openCodes, setOpenCodes] = useState<{ code: string, title: string }[]>([]);\n\n    useEffect(() => {\n        setDDC(ddcJson)\n        const flatJson = ddcJson.map(ddc => flatten(ddc, []))[2] //2 for Religion 200\n        setSearchOptions(flatJson)\n    }, []);\n\n    useEffect(() => {\n        if (expanded) {\n            setOpenCodes(createBreadcrumb(expanded, searchOptions).reverse())\n        } else {\n            setOpenCodes([])\n        }\n    }, [expanded, searchOptions]);\n\n    return (\n        <ColorModeContext.Provider value={colorMode}>\n            <ThemeProvider theme={theme}>\n                <TopBar openCodes={openCodes} setExpanded={setExpanded}/>\n                <SearchBar searchOptions={searchOptions} setExpanded={setExpanded}/>\n                <Box sx={{\n                    mt: searchBarMargin,\n                    display: 'flex',\n                    alignItems: \"center\",\n                    flexDirection: \"column\",\n                    bgcolor: 'background.default'\n                }}>\n                    <Helmet>\n                        <title>{\"DDC Index\"}</title>\n                    </Helmet>\n                    <CssBaseline/>\n                    <div style={{maxWidth: 900, padding: 20, width: '100%'}}>\n                        {ddc?.map(code => createAccordion(code, expanded, setExpanded, 1, theme))}\n                    </div>\n                </Box>\n            </ThemeProvider>\n        </ColorModeContext.Provider>\n    );\n}\n\nexport default App;\n","import {searchOption} from \"../types/types\";\n\n    export function createBreadcrumb(code: string, searchOptions: searchOption[]): {code: string, title: string}[]{\n    let crumbs: string[] = []\n\n    let codeChars = code.replace(/0*$/, \"\").split('')\n    while(codeChars.length > 0){\n        // console.log('codeChars', codeChars)\n        if(codeChars[codeChars.length-1] !== '.'){\n            let pushCode = codeChars.join('')\n            while (pushCode.length < 3) {\n                pushCode = pushCode + '0'\n            }\n            crumbs.push(pushCode)\n        }\n        codeChars.pop()\n    }\n\n    // now codes to key:val\n    let crumbKeys = crumbs.map(crumb => {\n        if(crumb === '200'){\n            return {code: '200', title: 'Religion'}\n        } else {\n            const option = searchOptions.filter(option => option.id === crumb)[0]\n            const code: string = option.id\n            const newCrumb: {code: string, title: string} = {code: code, title:option.title}\n            return newCrumb\n        }\n\n    })\n    return crumbKeys\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}